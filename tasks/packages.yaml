---
- name: Update installed packages with yum
  ansible.builtin.yum:
    name: '*'
    update_cache: true
    state: latest
    update_only: true
  when:
    - common_yum_upgrade | default(false)
    - upgrade_packages|bool
  tags: upgrade_packages

- name: Update installed packages with apt
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
    state: latest # noqa package-latest
  when:
    - common_apt_upgrade | default(false)
    - upgrade_packages|bool
  tags: upgrade_packages

- name: Updated installed packages with dnf
  ansible.builtin.dnf:
    name: '*'
    state: latest
    update_only: true
  when:
    - common_dnf_upgrade | default(false)
    - upgrade_packages|bool
  tags: upgrade_packages

- name: Refresh apt repos
  ansible.builtin.apt:
    update_cache: true
  when: ansible_pkg_mgr == "apt"
  check_mode: false

- name: Refresh dnf repos
  ansible.builtin.dnf:
    update_cache: true
  when: ansible_pkg_mgr == 'dnf'
  check_mode: false

- name: Install common packages
  ansible.builtin.package:
    name: "{{ common_packages | default([]) }}"
    state: present
  when: install_common_packages
  tags: common_packages

- name: Install custom packages
  vars:
    # create a dictionary of present and absent packages
    package_list: "{{ custom_packages | default({}) | dict2items }}"
    with_state: "{{ package_list | selectattr('value.state', 'defined') | list }}"
    without_state: "{{ package_list | rejectattr('value.state', 'defined') | list }}"
    present_packages: "{{ with_state | selectattr('value.state', 'equalto', 'present') | list | union(without_state) | map(attribute='key') | list }}"
    absent_packages: "{{ with_state | selectattr('value.state', 'equalto', 'absent') | map(attribute='key') | list }}"
    package_groups:
      - present: "{{ present_packages }}"
      - absent: "{{ absent_packages }}"
  ansible.builtin.package:
    name: "{{ item.value }}"
    state: "{{ item.key }}"
  when: "item.value | length > 0"
  ignore_errors: "{{ ansible_check_mode }}"
  with_dict: "{{ package_groups }}"
