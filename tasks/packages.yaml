---
- name: Update installed packages with yum
  yum:
    name: '*'
    update_cache: yes
    state: latest
  when:
    - ansible_distribution == 'CentOS'
    - upgrade_packages|bool
  tags: upgrade_packages|bool

- name: Update installed packages with apt 
  apt:
    upgrade: dist
    update_cache: yes
    state: latest
  tags: upgrade_packages
  when:
    - ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
    - upgrade_packages|bool

- name: Updated installed packages with dnf
  dnf:
    name: '*'
    state: latest
  when:
    - ansible_distribution == 'Fedora' or ansible_distribution == 'AlmaLinux'
    - upgrade_packages|bool
  tags: upgrade_packages|bool

- name: Install basic packages for {{ ansible_distribution }}
  package:
    name: "{{ common_packages | default([]) }}"
    state: present
  tags: basic_packages

- name: Install custom packages for {{ ansible_hostname }}
  vars:
    # create a dictionary of present and absent packages
    - package_list: "{{ custom_packages | default({}) | dict2items }}"
    - with_state: "{{ package_list | selectattr('value.state', 'defined') | list }}"
    - without_state: "{{ package_list | rejectattr('value.state', 'defined') | list }}"
    - present_packages: "{{ with_state | selectattr('value.state', 'equalto', 'present') | list | union(without_state) | map(attribute='key') | list }}"
    - absent_packages: "{{ with_state | selectattr('value.state', 'equalto', 'absent') | map(attribute='key') | list }}"
    - package_groups:
        - present: "{{ present_packages }}"
        - absent: "{{ absent_packages }}"
  package:
    name: "{{ item.value }}"
    state: "{{ item.key }}"
  when: "item.value | length > 0"
  with_dict: "{{ package_groups }}"
